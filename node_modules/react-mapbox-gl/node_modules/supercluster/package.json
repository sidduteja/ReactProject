{
  "_args": [
    [
      {
        "raw": "supercluster@3.0.1",
        "scope": null,
        "escapedName": "supercluster",
        "name": "supercluster",
        "rawSpec": "3.0.1",
        "spec": "3.0.1",
        "type": "version"
      },
      "/home/devrabbit/Desktop/ReactProject/node_modules/react-mapbox-gl"
    ]
  ],
  "_from": "supercluster@3.0.1",
  "_id": "supercluster@3.0.1",
  "_inCache": true,
  "_location": "/react-mapbox-gl/supercluster",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/supercluster-3.0.1.tgz_1507297013735_0.06847472465597093"
  },
  "_npmUser": {
    "name": "mourner",
    "email": "agafonkin@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "supercluster@3.0.1",
    "scope": null,
    "escapedName": "supercluster",
    "name": "supercluster",
    "rawSpec": "3.0.1",
    "spec": "3.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/react-mapbox-gl"
  ],
  "_resolved": "https://registry.npmjs.org/supercluster/-/supercluster-3.0.1.tgz",
  "_shasum": "e32c043659d442c150f674ebbaac5f5bdcf394e0",
  "_shrinkwrap": null,
  "_spec": "supercluster@3.0.1",
  "_where": "/home/devrabbit/Desktop/ReactProject/node_modules/react-mapbox-gl",
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "bugs": {
    "url": "https://github.com/mapbox/supercluster/issues"
  },
  "dependencies": {
    "kdbush": "^1.0.1"
  },
  "description": "A crazy fast geospatial point clustering library.",
  "devDependencies": {
    "browserify": "^14.4.0",
    "eslint": "^4.5.0",
    "eslint-config-mourner": "^2.0.1",
    "mkdirp": "^0.5.1",
    "tap": "^10.7.2",
    "uglify-js": "^3.0.28"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-iJO+PEMm9IGnWLJIB8J6osbsuFKYWxRJMEs9wZBzITCTEAnGhCq9NRpPTj6BakYtzvdxkZIKXYn3Lnpx18uhUg==",
    "shasum": "e32c043659d442c150f674ebbaac5f5bdcf394e0",
    "tarball": "https://registry.npmjs.org/supercluster/-/supercluster-3.0.1.tgz"
  },
  "eslintConfig": {
    "extends": "mourner",
    "rules": {
      "camelcase": 0,
      "indent": [
        "error",
        4,
        {
          "flatTernaryExpressions": true
        }
      ]
    }
  },
  "files": [
    "dist"
  ],
  "gitHead": "caac8963e18de72b398a8bca30b88d3c58866d45",
  "homepage": "https://github.com/mapbox/supercluster#readme",
  "keywords": [
    "clustering",
    "geospatial",
    "markers"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mourner",
      "email": "agafonkin@gmail.com"
    }
  ],
  "name": "supercluster",
  "optionalDependencies": {},
  "readme": "# supercluster [![Simply Awesome](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects) [![Build Status](https://travis-ci.org/mapbox/supercluster.svg?branch=master)](https://travis-ci.org/mapbox/supercluster)\n\nA very fast JavaScript library for geospatial point clustering for browsers and Node.\n\n```html\n<script src=\"https://unpkg.com/supercluster@2.3.0/dist/supercluster.min.js\"></script>\n```\n\n```js\nvar index = supercluster({\n    radius: 40,\n    maxZoom: 16\n});\nindex.load(points);\nindex.getClusters([-180, -85, 180, 85], 2);\n```\n\nClustering 6 million points in Leaflet:\n\n![clusters2](https://cloud.githubusercontent.com/assets/25395/11857351/43407b46-a40c-11e5-8662-e99ab1cd2cb7.gif)\n\n## Methods\n\n#### `load(points)`\n\nLoads an array of [GeoJSON.Feature](http://geojson.org/geojson-spec.html#feature-objects) objects. Each feature's `geometry` must be a [GeoJSON.Point](http://geojson.org/geojson-spec.html#point). Once loaded, index is immutable.\n\n#### `getClusters(bbox, zoom)`\n\nFor the given `bbox` array (`[westLng, southLat, eastLng, northLat]`) and integer `zoom`, returns an array of clusters and points as [GeoJSON.Feature](http://geojson.org/geojson-spec.html#feature-objects) objects.\n\n#### `getTile(z, x, y)`\n\nFor a given zoom and x/y coordinates, returns a [geojson-vt](https://github.com/mapbox/geojson-vt)-compatible JSON tile object with cluster/point features.\n\n#### `getChildren(clusterId)`\n\nReturns the children of a cluster (on the next zoom level) given its id (`cluster_id` value from feature properties).\n\n#### `getLeaves(clusterId, limit = 10, offset = 0)`\n\nReturns all the points of a cluster (given its `cluster_id`), with pagination support:\n`limit` is the number of points to return (set to `Infinity` for all points),\nand `offset` is the amount of points to skip (for pagination).\n\n#### `getClusterExpansionZoom(clusterId)`\n\nReturns the zoom on which the cluster expands into several children (useful for \"click to zoom\" feature) given the cluster's `cluster_id`.\n\n## Options\n\n| Option   | Default | Description                                                       |\n|----------|---------|-------------------------------------------------------------------|\n| minZoom  | 0       | Minimum zoom level at which clusters are generated.               |\n| maxZoom  | 16      | Maximum zoom level at which clusters are generated.               |\n| radius   | 40      | Cluster radius, in pixels.                                        |\n| extent   | 512     | (Tiles) Tile extent. Radius is calculated relative to this value. |\n| nodeSize | 64      | Size of the KD-tree leaf node. Affects performance.               |\n| log      | false   | Whether timing info should be logged.                             |\n\n### Property map/reduce options\n\nIn addition to the options above, supercluster supports property aggregation with the following three options:\n\n- `initial`: a function that returns an object with cluster's initial properties.\n- `map`: a function that returns properties to use for individual points.\n- `reduce`: a reduce function for calculating properties in clusters.\n\nExample of setting up a `sum` cluster property that accumulates the sum of `myValue` property values:\n\n```js\nvar index = supercluster({\n    initial: function() { return {sum: 0}; },\n    map: function(props) { return {sum: props.myValue}; },\n    reduce: function(accumulated, props) { accumulated.sum += props.sum; }\n});\n```\n\n## Developing Supercluster\n\n```\nnpm install       # install dependencies\nnpm run build-dev # generate dist/supercluster.js\nnpm run build-min # generate dist/supercluster.min.js\nnpm test          # run tests\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/supercluster.git"
  },
  "scripts": {
    "build-dev": "mkdirp dist && browserify -d index.js -s supercluster > dist/supercluster.js",
    "build-min": "mkdirp dist && browserify index.js -s supercluster | uglifyjs -c warnings=false -m > dist/supercluster.min.js",
    "cov": "tap test --cov",
    "prepublish": "npm run build-dev && npm run build-min",
    "pretest": "eslint index.js bench.js test/test.js",
    "test": "tap test"
  },
  "version": "3.0.1"
}
