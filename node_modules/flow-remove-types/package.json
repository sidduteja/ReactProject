{
  "_args": [
    [
      {
        "raw": "flow-remove-types@^1.1.2",
        "scope": null,
        "escapedName": "flow-remove-types",
        "name": "flow-remove-types",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/home/devrabbit/Desktop/ReactProject/node_modules/unflowify"
    ]
  ],
  "_from": "flow-remove-types@>=1.1.2 <2.0.0",
  "_id": "flow-remove-types@1.2.3",
  "_inCache": true,
  "_location": "/flow-remove-types",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/flow-remove-types-1.2.3.tgz_1508304700776_0.8678008443675935"
  },
  "_npmUser": {
    "name": "leebyron",
    "email": "lee@leebyron.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "flow-remove-types@^1.1.2",
    "scope": null,
    "escapedName": "flow-remove-types",
    "name": "flow-remove-types",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/unflowify"
  ],
  "_resolved": "https://registry.npmjs.org/flow-remove-types/-/flow-remove-types-1.2.3.tgz",
  "_shasum": "6131aefc7da43364bb8b479758c9dec7735d1a18",
  "_shrinkwrap": null,
  "_spec": "flow-remove-types@^1.1.2",
  "_where": "/home/devrabbit/Desktop/ReactProject/node_modules/unflowify",
  "author": {
    "name": "Lee Byron",
    "email": "lee@leebyron.com",
    "url": "http://leebyron.com/"
  },
  "bin": {
    "flow-remove-types": "./flow-remove-types",
    "flow-node": "./flow-node"
  },
  "bugs": {
    "url": "https://github.com/flowtype/flow-remove-types/issues"
  },
  "dependencies": {
    "babylon": "^6.15.0",
    "vlq": "^0.2.1"
  },
  "description": "Removes Flow type annotations from JavaScript files with speed and simplicity.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-ypq/U3V+t9atYiOuSJd40tekCra03EHKoRsiK/wXGrsZimuum0kdwVY7Yv0HTaoXgHW1WiayomYd+Q3kkvPl9Q==",
    "shasum": "6131aefc7da43364bb8b479758c9dec7735d1a18",
    "tarball": "https://registry.npmjs.org/flow-remove-types/-/flow-remove-types-1.2.3.tgz"
  },
  "files": [
    "index.js",
    "register.js",
    "flow-remove-types",
    "flow-node",
    "LICENSE",
    "PATENTS"
  ],
  "gitHead": "592e371443c90f7d3add0346cdb1c341ceff4f65",
  "homepage": "https://github.com/flowtype/flow-remove-types",
  "keywords": [
    "flow",
    "flowtype",
    "compiler",
    "transpiler",
    "transform",
    "es6"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "leebyron",
      "email": "lee@leebyron.com"
    }
  ],
  "name": "flow-remove-types",
  "optionalDependencies": {},
  "readme": "flow-remove-types\n=================\n\n[![npm](https://img.shields.io/npm/v/flow-remove-types.svg?maxAge=86400)](https://www.npmjs.com/package/flow-remove-types)\n[![Build Status](https://img.shields.io/travis/flowtype/flow-remove-types.svg?style=flat&label=travis&branch=master)](https://travis-ci.org/flowtype/flow-remove-types)\n\nTurn your JavaScript with [Flow](https://flowtype.org/) type annotations into\nstandard JavaScript in an instant with no configuration and minimal setup.\n\n[Flow](https://flowtype.org/) provides static type checking to JavaScript which\ncan both help find and detect bugs long before code is deployed and can make\ncode easier to read and more self-documenting. The Flow tool itself only reads\nand analyzes code. Running code with Flow type annotations requires first\nremoving the annotations which are non-standard JavaScript. Typically this is\ndone via adding a plugin to your [Babel](https://babeljs.io/) configuration,\nhowever Babel may be overkill if you're only targetting modern versions of\nNode.js or just not using the modern ES2015 features that may not be in\nevery browser.\n\n`flow-remove-types` is a faster, simpler, zero-configuration alternative with\nminimal dependencies for super-fast `npm install` time.\n\n\n## Get Started!\n\nUse the command line:\n\n```\nnpm install --global flow-remove-types\n```\n\n```\nflow-remove-types --help\nflow-remove-types input.js > output.js\n```\n\nOr the JavaScript API:\n\n```\nnpm install flow-remove-types\n```\n\n```js\nvar flowRemoveTypes = require('flow-remove-types');\nvar fs = require('fs');\n\nvar input = fs.readFileSync('input.js', 'utf8');\nvar output = flowRemoveTypes(input);\nfs.writeFileSync('output.js', output.toString());\n```\n\nWhen using the `flow-remove-types` script, be sure [not to direct the output to itself](https://superuser.com/questions/597244/why-does-redirecting-the-output-of-a-file-to-itself-produce-a-blank-file)!\n\n## Use in Build Systems:\n\n**Rollup:** [`rollup-plugin-flow`](https://github.com/leebyron/rollup-plugin-flow)\n\n**Browserify:** [`unflowify`](https://github.com/leebyron/unflowify)\n\n**Webpack:** [`remove-flow-types-loader`](https://github.com/conorhastings/remove-flow-types-loader)\n\n**Gulp:** [`gulp-flow-remove-types`](https://github.com/wain-pc/gulp-flow-remove-types)\n\n\n## Use with existing development tools\n\n * ESLint: [eslint-plugin-flowtype](https://github.com/gajus/eslint-plugin-flowtype)\n * Mocha: `mocha -r flow-remove-types/register`\n\n\n## Use `flow-node`\n\nWherever you use `node` you can substitute `flow-node` and have a super fast\nflow-types aware evaluator or REPL.\n\n```\n$ flow-node\n> var x: number = 42\nundefined\n> x\n42\n```\n\n> Note: This package is also available under the *alias* `flow-node` since it's\n> often looked for at that location due to the popularity of this script. Both\n> scripts are available no matter which package you install.\n\n## Use the require hook\n\nUsing the require hook allows you to automatically compile files on the fly when\nrequiring in node, useful during development:\n\n```js\nrequire('flow-remove-types/register')\nrequire('./some-module-with-flow-type-syntax')\n```\n\nYou can also provide options to the require hook:\n\n```js\n// Transforms all files, not just those with a \"@flow\" comment.\nrequire('flow-remove-types/register')({ all: true })\n```\n\nUse options to define exactly which files to `includes` or `excludes` with regular\nexpressions. All files are included by default except those found in the\n`node_modules` folder, which is excluded by default.\n\n```js\nrequire('flow-remove-types/register')({ includes: /\\/custom_path\\// })\n```\n\n> #### Don't use the require hook in packages distributed on NPM\n> As always, don't forget to use `flow-remove-types` to compile files before distributing\n> your code on npm, as using the require hook affects the whole runtime and not\n> just your module and may hurt the runtime performance of code that includes it.\n\n\n## Dead-Simple Transforms\n\nWhen `flow-remove-types` removes Flow types, it replaces them with whitespace.\nThis ensures that the transformed output has exactly the same number of lines\nand characters and that all character offsets remain the same. This removes the\nneed for sourcemaps, maintains legible output, and ensures that it is super easy\nto include `flow-remove-types` at any point in your existing build tools.\n\nBuilt atop the excellent [`babylon`](https://github.com/babel/babylon) parser,\n`flow-remove-types` shares the same parse rules as the source of truth as\nFlow Babel plugins. It also passes through other common non-standard syntax such\nas [JSX](https://facebook.github.io/jsx/) and experimental ECMAScript proposals.\n\n**Before:**\n\n```js\nimport SomeClass from 'some-module'\nimport type { SomeInterface } from 'some-module'\n\nexport class MyClass<T> extends SomeClass implements SomeInterface {\n\n  value: T\n\n  constructor(value: T) {\n    this.value = value\n  }\n\n  get(): T {\n    return this.value\n  }\n\n}\n\n```\n\n**After:**\n\n```js\nimport SomeClass from 'some-module'\n\n\nexport class MyClass    extends SomeClass                          {\n\n\n\n  constructor(value   ) {\n    this.value = value\n  }\n\n  get()    {\n    return this.value\n  }\n\n}\n```\n\n### Pretty Transform\n\nRather not have the whitespace? Pass the `--pretty` flag to remove the whitespace.\n\n```\nflow-remove-types --pretty --sourcemaps source.js\n```\n\nOr using the JS API:\n\n```js\nvar flowRemoveTypes = require('flow-remove-types');\nvar fs = require('fs');\n\nvar input = fs.readFileSync('input.js', 'utf8');\nvar output = flowRemoveTypes(input, { pretty: true });\nfs.writeFileSync('output.js', output.toString());\nvar sourceMap = output.generateMap();\nfs.writeFileSync('output.js.map', JSON.stringify(sourceMap));\n```\n\n\n## Performance\n\n### Install:\n\nInstalling via `npm` from an empty project:\n\n**flow-remove-types:**\n\n```\ntime npm install flow-remove-types\n\nreal  0m3.193s\nuser  0m1.643s\nsys   0m0.775s\n```\n\n**Babel:**\n\n```\ntime npm install babel-cli babel-plugin-transform-flow-strip-types\n\nreal  0m23.200s\nuser  0m10.395s\nsys   0m4.238s\n```\n\n### Transform:\n\nTransforming a directory of 20 files of 100 lines each:\n\n**flow-remove-types:**\n\n```\ntime flow-remove-types src/ --out-dir dest/\n\nreal  0m0.431s\nuser  0m0.436s\nsys   0m0.068s\n```\n\n**Babel:**\n\n```\ntime babel src/ --out-dir dest/\n\nreal  0m1.074s\nuser  0m1.092s\nsys   0m0.149s\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/flowtype/flow-remove-types.git"
  },
  "scripts": {
    "postpublish": "./publish-npm-alias.sh",
    "test": "./test.sh",
    "test-update": "./test-update.sh"
  },
  "version": "1.2.3"
}
